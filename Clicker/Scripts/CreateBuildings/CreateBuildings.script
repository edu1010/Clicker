numberOfBars = 0
function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed

	self.timer = 0
end
go.property("cost_ofBars", 10)



function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	if message_id == hash("CreateBar") then
		if(numberOfDollars>=self.cost_ofBars) and numberOfBars <= 5 then
			numberOfDollars = numberOfDollars-self.cost_ofBars
			msg.post("/Clicker#TextDollarsGui", "setText",{numberOfDollarsT = numberOfDollars })
			numberOfBars = numberOfBars +1
			msg.post("/Clicker#TextDollarsGui", "setBarsText",{numberOfDbarsT = numberOfBars })
			local pos =  vmath.vector3(432,339,0.5)
			
			if(numberOfBars <= 5)then
				for i=1, numberOfBars do
					if i>1 then
						pos = pos + vmath.vector3(100, 0, 0)
					end
				end
				local spawnBar = factory.create("#factoryBar", pos, nil, nil, 0.4)
			end
		end
		
	end
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	if go.get_scale("/ButtonBar") == vmath.vector3(0.45, 0.45, 0.45) then
		self.timer = self.timer + dt
		if self.timer > 0.1 then
			local originalScale = vmath.vector3(0.5, 0.5, 0.5)
			go.set_scale(originalScale, "/ButtonBar")
			self.timer = 0
		end
	end
	if go.get_scale("/ButtonHospital") == vmath.vector3(0.45, 0.45, 0.45) then
		self.timer = self.timer + dt
		if self.timer > 0.1 then
			local originalScale = vmath.vector3(0.5, 0.5, 0.5)
			go.set_scale(originalScale, "/ButtonHospital")
			self.timer = 0
		end
	end
	if go.get_scale("/ButtonFactory") == vmath.vector3(0.45, 0.45, 0.45) then
		self.timer = self.timer + dt
		if self.timer > 0.1 then
			local originalScale = vmath.vector3(0.5, 0.5, 0.5)
			go.set_scale(originalScale, "/ButtonFactory")
			self.timer = 0
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
